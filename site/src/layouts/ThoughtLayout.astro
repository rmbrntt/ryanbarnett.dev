---
import BaseLayout from "./BaseLayout.astro";
import type { CollectionEntry } from "astro:content";

interface Props {
  thought: CollectionEntry<"thoughts">;
}

const { thought } = Astro.props;

const formattedDate = new Date(thought.data.publishDate).toLocaleDateString(
  "en-US",
  {
    year: "numeric",
    month: "long",
    day: "numeric",
  }
);
---

<BaseLayout
  title={`${thought.data.title} - Ryan Barnett`}
  description={thought.data.description}
  systemReveal={thought.data.systemReveal}>
  <article class="container max-w-[75ch] mx-auto">
    <header class="mb-12">
      <h1
        class="mb-4 text-4xl font-bold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-quantum-primary to-quantum-secondary">
        {thought.data.title}
      </h1>

      {
        thought.data.description && (
          <p class="text-xl text-muted-foreground mb-6">
            {thought.data.description}
          </p>
        )
      }

      <div
        class="flex flex-wrap gap-4 items-center text-sm text-muted-foreground">
        <time
          datetime={thought.data.publishDate.toISOString()}
          class="flex items-center">
          <span class="w-4 h-4 mr-2">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="w-4 h-4"
              ><circle cx="12" cy="12" r="10"></circle><polyline
                points="12 6 12 12 16 14"></polyline></svg
            >
          </span>
          {formattedDate}
        </time>

        {
          thought.data.tags && (
            <div class="flex flex-wrap gap-2">
              {thought.data.tags.map((tag) => (
                <a
                  href={`/tags/${tag}`}
                  class="hover:text-quantum-primary transition-colors inline-flex items-center">
                  <span class="w-4 h-4 mr-1">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      class="w-4 h-4">
                      <path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z" />
                      <line x1="7" y1="7" x2="7.01" y2="7" />
                    </svg>
                  </span>
                  {tag}
                </a>
              ))}
            </div>
          )
        }
      </div>
    </header>

    <div
      class="prose prose-quantum dark:prose-invert prose-pre:border prose-pre:border-border max-w-none">
      <slot />
    </div>

    {
      thought.data.systemReveal && (
        <div
          id="knowledge-context"
          class="fixed top-24 right-8 w-64 bg-background/80 backdrop-blur-sm rounded-lg shadow-lg border border-border p-4 hidden lg:block">
          <h2 class="text-sm font-medium mb-2">Knowledge Context</h2>
          <div class="text-sm text-muted-foreground">Loading context...</div>
        </div>
      )
    }
  </article>
</BaseLayout>

<style>
  /* Quantum glow effects */
  h1 {
    text-shadow: 0 0 30px hsl(var(--quantum-primary) / 0.2);
  }

  /* Smooth scrolling for anchor links */
  html {
    scroll-behavior: smooth;
  }

  /* Custom scrollbar for knowledge context */
  #knowledge-context::-webkit-scrollbar {
    width: 6px;
  }

  #knowledge-context::-webkit-scrollbar-track {
    background: transparent;
  }

  #knowledge-context::-webkit-scrollbar-thumb {
    background: hsl(var(--quantum-primary) / 0.2);
    border-radius: 3px;
  }

  #knowledge-context::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--quantum-primary) / 0.3);
  }
</style>
